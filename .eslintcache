[{"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/App.js":"1","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/cart.jsx":"2","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/products.jsx":"3","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/filter.jsx":"4"},{"size":2979,"mtime":1609681022007,"results":"5","hashOfConfig":"6"},{"size":3515,"mtime":1609682516900,"results":"7","hashOfConfig":"6"},{"size":3164,"mtime":1609695293571,"results":"8","hashOfConfig":"6"},{"size":1072,"mtime":1606766497021,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1xs2ipv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/App.js",["20"],"//feature 1\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/filter';\nimport Products from './components/products';\nimport data from \"./data.json\";\nimport Cart from './components/cart';\n\n\nfunction App() {\n\n  const [products, setProducts] = useState(data.products);\n  const [size, setSize] = useState(\"\");\n  const [sort, setSort] = useState('');\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem('cartItems')) || []);\n\n\n  const addToCart = (product) => {\n    console.log('cart Items inside addtocart:', cartItems);\n    const tempCartItems = cartItems.slice();\n    console.log('tempCartItems:', tempCartItems);\n    let alreadyInCart = false;\n    tempCartItems.forEach((item) => {\n      if (item.id === product.id) {\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n    if (!alreadyInCart) {\n      tempCartItems.push({ ...product, count: 1 });\n    }\n    setCartItems(tempCartItems);\n    localStorage.setItem('cartItems', JSON.stringify(tempCartItems));\n  }\n\n  const removeFromCart = (index) => {\n    const tempCartItems = cartItems.slice();\n    tempCartItems.splice(index, 1);\n    setCartItems(tempCartItems);\n    localStorage.setItem('cartItems', JSON.stringify(tempCartItems));\n  }\n\n  const filterSort = (sort) => {\n    setSort(sort);\n    let sortArray = products.slice().sort((a, b) =>\n      sort === 'lowest'\n        ? a.price > b.price\n          ? 1\n          : -1\n        : sort === 'highest'\n          ? a.price < b.price\n            ? 1\n            : -1\n          : a.id < b.id\n            ? 1\n            : -1);\n    setProducts(sortArray);\n  }\n\n  const filterSize = (size) => {\n    console.log(size);\n    if (size === \"\") {\n      setProducts(data.products);\n      setSize(size);\n    } else {\n      let filteredProducts = data.products.filter(product => product.availableSize.includes(size));\n      setProducts(filteredProducts);\n      setSize(size);\n    }\n  }\n\n  const createOrder=(orderData)=>{\n    console.log('inide app',orderData);\n    alert('Need the ordre is ',orderData)\n  }\n\n\n\n\n\n  return (\n    <div className='grid-container'>\n\n      <header>\n        <a href='/'>React Shopping Cart</a>\n      </header>\n\n      <main>\n        <div className='content'>\n          <div className=\"main\">\n            <Filter\n              count={products.length}\n              size={size}\n              sort={sort}\n              filterSize={filterSize}\n              filterSort={filterSort}\n            />\n            <Products\n              products={products}\n              size={size}\n              sort={sort}\n              addToCart={addToCart}\n            />\n          </div>\n          <div className=\"sidebar\">\n            <Cart cartItems={cartItems}\n              removeFromCart={removeFromCart}\n              createOrder={createOrder}\n            />\n          </div>\n        </div>\n      </main>\n\n      <footer>\n        All rights reserved\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/cart.jsx",[],"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/products.jsx",["21","22","23"],"import React, { useState } from 'react';\nimport handlePrice from '../util';\nimport Slide from 'react-reveal/Slide'\nimport Modal from 'react-modal';\nimport Zoom from 'react-reveal/Zoom';\n\nlet filteredProducts;\nexport default function Products(props) {\n\n  const { products, size, sort, addToCart } = props;\n\n  const [product, setProduct] = useState(null);\n\n  const openModal = (product) => {\n    console.log('product is', product);\n    setProduct(product);\n  }\n\n  const closeModal = () => {\n    setProduct(null);\n  }\n\n  return (\n    <div>\n      <Slide bottom cascade>\n        <ul className=\"products\">\n          {\n            products.map(product => {\n              return (\n                <li key={product.id}>\n                  <div className=\"product\">\n                    <a\n                      href={'#' + product.id}\n                      visited='false'\n                      onClick={() => openModal(product)}\n                    >\n                      <img\n                        src={product.image}\n                        alt={product.title}\n                        style={{ width: '350px' }}\n                      />\n                      <p>{product.title}</p>\n                    </a>\n                    <div className=\"product-price\">\n                      <div>{handlePrice(product.price)}</div>\n                      <button\n                        className=\"button primary\"\n                        onClick={() => addToCart(product)}\n                      >\n                        Add to Cart\n                    </button>\n                    </div>\n                  </div>\n                </li>\n\n              );\n            })\n          }\n        </ul>\n      </Slide>\n      {\n        product && (\n          <Modal\n            isOpen={true}\n            onRequestClose={closeModal}\n          >\n            <Zoom>\n              <button className='close-modal' onClick={() => closeModal()}>x</button>\n              <div className='product-details'>\n                <img src={product.image} alt={product.title} />\n                <div className=\"product-details-description\">\n                  <p>\n                    <strong>{product.title}</strong>\n                  </p>\n                  <p>\n                    {product.description}\n                  </p>\n                  <p>\n                    Available Sizes:{' '}\n                    {product.availableSize.map(size =>\n                      <span>\n                        {' '}\n                        <button className=\"button\">{size}</button>\n                      </span>\n                    )}\n                  </p>\n                  <div className=\"product-details-price\">\n                    <p><strong>{handlePrice(product.price)}</strong></p>\n                    <button className=\"button primary\"\n                      onClick={() => {\n                        addToCart(product);\n                        closeModal();\n                      }}\n                    >\n                      Add To Cart\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Zoom>\n          </Modal>\n        )\n      }\n    </div>\n  )\n}\n","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/filter.jsx",[],{"ruleId":"24","severity":1,"message":"25","line":2,"column":27,"nodeType":"26","messageId":"27","endLine":2,"endColumn":36},{"ruleId":"24","severity":1,"message":"28","line":7,"column":5,"nodeType":"26","messageId":"27","endLine":7,"endColumn":21},{"ruleId":"24","severity":1,"message":"29","line":10,"column":21,"nodeType":"26","messageId":"27","endLine":10,"endColumn":25},{"ruleId":"24","severity":1,"message":"30","line":10,"column":27,"nodeType":"26","messageId":"27","endLine":10,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'filteredProducts' is defined but never used.","'size' is assigned a value but never used.","'sort' is assigned a value but never used."]