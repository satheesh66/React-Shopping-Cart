[{"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/App.js":"1","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/cart.jsx":"2","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/products.jsx":"3","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/filter.jsx":"4"},{"size":2979,"mtime":1609505637175,"results":"5","hashOfConfig":"6"},{"size":3266,"mtime":1609506721487,"results":"7","hashOfConfig":"6"},{"size":1141,"mtime":1608398654130,"results":"8","hashOfConfig":"6"},{"size":1072,"mtime":1606766497021,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1xs2ipv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/App.js",["19"],"//feature 1\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/filter';\nimport Products from './components/products';\nimport data from \"./data.json\";\nimport Cart from './components/cart';\n\n\nfunction App() {\n\n  const [products, setProducts] = useState(data.products);\n  const [size, setSize] = useState(\"\");\n  const [sort, setSort] = useState('');\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem('cartItems')) || []);\n\n\n  const addToCart = (product) => {\n    console.log('cart Items inside addtocart:', cartItems);\n    const tempCartItems = cartItems.slice();\n    console.log('tempCartItems:', tempCartItems);\n    let alreadyInCart = false;\n    tempCartItems.forEach((item) => {\n      if (item.id === product.id) {\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n    if (!alreadyInCart) {\n      tempCartItems.push({ ...product, count: 1 });\n    }\n    setCartItems(tempCartItems);\n    localStorage.setItem('cartItems', JSON.stringify(tempCartItems));\n  }\n\n  const removeFromCart = (index) => {\n    const tempCartItems = cartItems.slice();\n    tempCartItems.splice(index, 1);\n    setCartItems(tempCartItems);\n    localStorage.setItem('cartItems', JSON.stringify(tempCartItems));\n  }\n\n  const filterSort = (sort) => {\n    setSort(sort);\n    let sortArray = products.slice().sort((a, b) =>\n      sort === 'lowest'\n        ? a.price > b.price\n          ? 1\n          : -1\n        : sort === 'highest'\n          ? a.price < b.price\n            ? 1\n            : -1\n          : a.id < b.id\n            ? 1\n            : -1);\n    setProducts(sortArray);\n  }\n\n  const filterSize = (size) => {\n    console.log(size);\n    if (size === \"\") {\n      setProducts(data.products);\n      setSize(size);\n    } else {\n      let filteredProducts = data.products.filter(product => product.availableSize.includes(size));\n      setProducts(filteredProducts);\n      setSize(size);\n    }\n  }\n\n  const createOrder=(orderData)=>{\n    console.log('inide app',orderData);\n    alert('Need the ordre is ',orderData)\n  }\n\n\n\n\n\n  return (\n    <div className='grid-container'>\n\n      <header>\n        <a href='/'>React Shopping Cart</a>\n      </header>\n\n      <main>\n        <div className='content'>\n          <div className=\"main\">\n            <Filter\n              count={products.length}\n              size={size}\n              sort={sort}\n              filterSize={filterSize}\n              filterSort={filterSort}\n            />\n            <Products\n              products={products}\n              size={size}\n              sort={sort}\n              addToCart={addToCart}\n            />\n          </div>\n          <div className=\"sidebar\">\n            <Cart cartItems={cartItems}\n              removeFromCart={removeFromCart}\n              createOrder={createOrder}\n            />\n          </div>\n        </div>\n      </main>\n\n      <footer>\n        All rights reserved\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/cart.jsx",[],"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/products.jsx",["20","21","22"],"/home/satheesh/webdesign/react-projects/react-shopping-cart/src/components/filter.jsx",[],{"ruleId":"23","severity":1,"message":"24","line":2,"column":27,"nodeType":"25","messageId":"26","endLine":2,"endColumn":36},{"ruleId":"23","severity":1,"message":"27","line":4,"column":5,"nodeType":"25","messageId":"26","endLine":4,"endColumn":21},{"ruleId":"23","severity":1,"message":"28","line":7,"column":21,"nodeType":"25","messageId":"26","endLine":7,"endColumn":25},{"ruleId":"23","severity":1,"message":"29","line":7,"column":27,"nodeType":"25","messageId":"26","endLine":7,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'filteredProducts' is defined but never used.","'size' is assigned a value but never used.","'sort' is assigned a value but never used."]